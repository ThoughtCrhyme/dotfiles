call pathogen#infect()
call pathogen#helptags()

let mapleader=","  " change <leader> to ,
" turn off old bugs/limits
set nocompatible      " We're running Vim, not Vi!
syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins"

" don't care about modula2; set all *.md as markdown
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
" setup the omnicomplete function
set omnifunc=syntaxcomplete#Complete
" use supertab for omnicomplete or speling based on context
" has to be after omnicomplete configs
let g:SuperTabDefaultCompletionType = "<c-x><c-o>"
"let g:SuperTabDefaultCompletionType = "context"

" theme
set background=dark
let g:solarized_termtrans=1
let g:solarized_termcolors=256
colorscheme solarized

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>
"
" Use the same symbols as TextMate for tabstops and EOLs
"set listchars=tab:▸\ ,eol:¬"

"Hide abandon buffers in order to not lose undo history.
set hid
" autosave buffers when switching buffers
set autowrite
set noerrorbells " No noise.
set mousehide " hide mouse after typing
set guifont=Monaco:h12
" autotab/indent stuff
"set et
set autoindent
" erase previously entered chars, autoindent and newlines 
set backspace=indent,eol,start
"set smarttab
"set smartindent
"set indentexpr
set tabstop=2
set shiftwidth=2
set expandtab 
" show matching brace/paren
set showmatch
" autoindent perl only
"autocmd FileType perl set autoindent|set smartindent
" make tab in v mode ident code
"vmap <tab> >gv
"vmap <s-tab> <gv
" make tab in normal mode ident code
"nmap <tab> I<tab><esc>
"nmap <s-tab> ^i<bs><esc>

"" Enable folding based on syntax rules
set foldmethod=syntax
" default to unfolded (99 levels)
set foldlevel=99
"" Adjust the highlighting
highlight Folded guibg=grey guifg=blue
"" Map folding to Spacebar
nnoremap <Space> za

" tagbar stuff for ruby
let g:tagbar_type_ruby = {
    \ 'kinds' : [
        \ 'm:modules',
        \ 'c:classes',
        \ 'd:describes',
        \ 'C:contexts',
        \ 'f:methods',
        \ 'F:singleton methods'
    \ ]
\ }

set tags+=./tags,tags;
set tags+=~/repos/er0ck/*/.git/tags

" map F2 key to paste-mode toggle and set status
nnoremap <F2> :set invpaste paste?<CR>
imap <F2> <C-O><F2>
set pastetoggle=<F2>
" dont use Q for Ex mode
"map Q :q
"map q :q

" show line nums, etc
"set ruler
" always show statusbar
set laststatus=2
set statusline=%<%f\ %h%m%r\ %y%=%{v:register}\ %-14.(%l,%c%V%)\ %P
" show linenumbers on left
set number
" start searching before enter
set incsearch
set smartcase " use case sensitive when caps used
set hlsearch  " highlight search
" alt left and right for buffer up/dn
:nmap <M-Left> :bprev<CR>
:nmap <M-Right> :bnext<CR>

" vimdiff settings
" fill in space btwn lines to align buffers:
set diffopt=filler
" ignore whitespace
set diffopt+=iwhite
nmap <F8> :TagbarToggle<CR> " 
map <C-n> :NERDTreeToggle<CR> " ctrl-n for nerdtree

" setup hilight colorscheme for whitespace
highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
"autocmd ColorScheme * highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
"match ExtraWhitespace /\s\+$/  " Show trailing whitespace
match ExtraWhitespace /\s\+\%#\@<!$/
"match ExtraWhitespace /\t/  " Show tabs
