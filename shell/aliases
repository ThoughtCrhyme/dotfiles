# erict@erict.net .alias file
#   should work in osx and linux
#   aliases at the top, functions at bottom

### Get os name via uname ###
_myos="$(uname)"

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~"
alias -- -="cd -"

case $_myos in
   Linux)
     alias ls="ls -F --color" ;;
   Darwin)
     alias ls="ls -F -G"
     alias gvim=mvim
     alias gvimdiff=mvimdiff
     # Open file in existing MacVim window
     alias gvim="open -a MacVim"
     # Show/hide hidden files in Finder
     alias showdotfiles="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
     alias hidedotfiles="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"
     # Hide/show all desktop icons (useful when presenting)
     alias showdeskicons="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
     alias hidedeskicons="defaults write com.apple.finder CreateDesktop -bool false && killall Finder" ;;
   *) ;;
esac

alias la="ls -A"
alias ll="ls -lh"
alias lal="ls -Alh"
alias dusort="du --max-depth=1 | sort -n -r"
alias findmod="find /lib/modules/ -type f -iname '*.o' -or -iname '*.ko'"
#alias perlreplace="perl -pi -e 's/find/replace/g' *.txt"

alias more="less"
alias rmo="rm -i *~"
alias truecrypt="sudo truecrypt"
alias mroe="more"
alias bc="bc -l"
alias grep='grep --colour=auto'
alias xmerge="ACCEPT_KEYWORDS=~x86 emerge"
alias ssh="ssh -XYC"
alias f-spot="dbus-launch f-spot"
alias bi="bundle install"
alias be="bundle exec"
# Release all hosts from today.
#alias release-hosts="grep -oE \"[0-9a-z]{15} \(\" $PATH_TO_BEAKER/log/`date "+%Y-%m-%d*"`/pre_suite-run.log | grep -oE \"[0-9a-z]{15}\" | sort | uniq | xargs -L 1 -I some_vm curl -v -X DELETE --url vcloud/vm/some_vm"
alias killvm='grep -oE "[0-9a-z]{15}(\.delivery\.puppetlabs\.net)? \(.*?\)" log/latest/*-run.log | sort | uniq | awk '\''{print $1}'\'' | { while read i ; do curl -X DELETE --url vcloud/vm/$i ; done };echo""'
alias notifybeaker='notify_done beaker'
alias git_get_head='git rev-parse HEAD'
alias git_get_remote_head='git ls-remote upstream HEAD'
alias git_changed_tests_csv='git diff --name-only --relative upstream/master | grep tests/ | tr "\r\n" ","'

# move file and symlink to it from og position
function lmv(){ [ -e "$1" -a -e "$2" ] && mv "$1" "$2" && ln -s "$2/$(basename $1)" "$(dirname $1)"; }

# mkdir, cd into it
mkcd () {
  mkdir -p "$*"
  cd "$*"
}

# vcloud curl command one-liners
lsvm() {
  curl --url http://vcloud.delivery.puppetlabs.net/vm 2> /dev/null | ruby -e 'require "json"; JSON.parse(STDIN.read).each { |vm| puts vm }'
}

getvm() {
  curl -d --url http://vcloud.delivery.puppetlabs.net/vm/$1 2> /dev/null | ruby -e 'require "json"; resp = JSON.parse(STDIN.read); puts resp[resp.keys[0]]["hostname"]'
}

showvm() {
  HOSTS_FROM_LOG=`ack -oh  '[0-9a-z]{15}(\.delivery\.puppetlabs\.net)? \((?!speed,).*?\)' log/latest/*-run.log`
  # if hosts variable is not empty/whitespace
  if [[ ! -z "${HOSTS_FROM_LOG// /}" ]]; then
    echo "$HOSTS_FROM_LOG" | sort | uniq
  else
    ack -oh  '[0-9a-z]{15}(\.delivery\.puppetlabs\.net)?' hosts.cfg
  fi
}

sshvm() {
  if ! host $1 > /dev/null 2>&1; then
    HOSTNAME=`showvm | head -1 | grep $1 | ack -oh  '[0-9a-z]{15}(\.delivery\.puppetlabs\.net)?'`
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa-acceptance root@$HOSTNAME "${@:2}"
  else
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa-acceptance root@$1 "${@:2}"
  fi
}

sshwinvm() {
  if ! host $1 > /dev/null 2>&1; then
    HOSTNAME=`showvm | head -1 | grep $1 | ack -oh  '[0-9a-z]{15}(\.delivery\.puppetlabs\.net)?'`
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa-acceptance Administrator@$HOSTNAME "${@:2}"
  else
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa-acceptance Administrator@$1 "${@:2}"
  fi
}

rmvm() {
  curl -X DELETE --url http://vcloud.delivery.puppetlabs.net/vm/$1 ; echo""
}
# Release all hosts from today.
#alias release-hosts="grep -oE \"[0-9a-z]{15} \(\" $PATH_TO_BEAKER/log/`date "+%Y-%m-%d*"`/pre_suite-run.log | grep -oE \"[0-9a-z]{15}\" | sort | uniq | xargs -L 1 -I some_vm curl -v -X DELETE --url vcloud/vm/some_vm"

# force mvim to create/open empty files
mvim () {
  local f
  for f; do
    test -e "$f" || touch "$f"
  done
  open -a macvim "$@"
}
