# bash_profile
export PATH=.bundle/bin:/opt/local/bin:/opt/local/sbin:$PATH
export BUNDLE_PATH=.bundle/
export BUNDLE_BIN=.bundle/bin

#This file is sourced by bash when you log in interactively.
[ -f ~/dotfiles/shell/bashrc ] && source ~/dotfiles/shell/bashrc

# set 256 color profile where possible
if [[ $COLORTERM == gnome-* && $TERM == xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

# set display automagically, may only work when on telnet...
if [ -z "$DISPLAY" ]; then
  dis=`who am i $options | sed -e "s/(//" -e "s/\.*)//" | awk '{printf "%s", $6}'`
  case "$dis" in
    *) DISPLAY=${dis}:0.0 ;;
  esac
else
  DISPLAY=${DISPLAY%.0}
fi
export DISPLAY

# Load in the git branch prompt script.
[ -f ~/dotfiles/shell/git_prompt  ] && source ~/dotfiles/shell/git_prompt
#[ -f ~/dotfiles/shell/bash_prompt ] && source ~/dotfiles/shell/bash_prompt

set_prompt () {
  Last_Command=$? # Must come first!
  local black=""
  local blue=""
  local bold=""
  local cyan=""
  local green=""
  local orange=""
  local purple=""
  local red=""
  local reset=""
  local white=""
  local yellow=""

  local hostStyle=""
  local userStyle=""

  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    tput sgr0 # reset colors

    bold=$(tput bold)
    reset=$(tput sgr0)

    # Solarized colors
    # (https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized#the-values)
    black=$(tput setaf 0)
    blue=$(tput setaf 33)
    cyan=$(tput setaf 37)
    green=$(tput setaf 64)
    orange=$(tput setaf 166)
    purple=$(tput setaf 125)
    red=$(tput setaf 124)
    white=$(tput setaf 15)
    yellow=$(tput setaf 136)
  else
    bold=""
    reset="\e[0m"

    black="\e[1;30m"
    blue="\e[1;34m"
    cyan="\e[1;36m"
    green="\e[1;32m"
    orange="\e[1;33m"
    purple="\e[1;35m"
    red="\e[1;31m"
    white="\e[1;37m"
    yellow="\e[1;33m"
  fi
    FancyX='\342\234\227'
    Checkmark='\342\234\223'

    # Add a bright white exit status for the last command
    #PS1="$White\$? "
    PS1=""
    # If it was successful, print a green check mark. Otherwise, print
    # a red X.
    if [[ $Last_Command == 0 ]]; then
        PS1+="$green$Checkmark "
    else
        PS1+="$red$FancyX "
    fi
    # If root, just print the host in red. Otherwise, print the current user
    # and host in green.
    if [[ $EUID == 0 ]]; then
        PS1+="$red\\h "
    else
        PS1+="$green\\u@\\h "
    fi
    # Print the working directory and prompt marker in blue, and reset
    # the text color to the default.
    PS1+="$blue\\w" 
    GIT=$(__git_ps1)
    if (( ${#GIT} > 10 )); then
      PS1+="\n$reset\$(__git_ps1)\\\$ "
    else
      PS1+="$reset\$(__git_ps1)\\\$ "
    fi
}
PROMPT_COMMAND='set_prompt'
